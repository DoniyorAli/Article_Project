package main

import (
	"UacademyGo/Article/config"
	docs "UacademyGo/Article/docs" // docs is generated by Swag CLI, you have to import it.
	"UacademyGo/Article/handlers"
	"UacademyGo/Article/storage"
	"UacademyGo/Article/storage/postgres"
	"fmt"

	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// * @contact.name   API Article
// * @contact.url    http://john.doe.com
// * @contact.email  john.doe@swagger.io
// * @license.name  Apache 2.0
// * @license.url   http://www.apache.org/licenses/LICENSE-2.0.html

func main() {

	cfg := config.Load()

	psqlConfString := fmt.Sprintf(
		"host=%s port=%d user=%s password=%s dbname=%s sslmode=disable",
		cfg.PostgresHost,
		cfg.PostgresPort,
		cfg.PostgresUser,
		cfg.PostgresPassword,
		cfg.PostgresDatabase,
	)
	
	// programmatically set swagger info
	docs.SwaggerInfo.Title = "Swagger Example API"
	docs.SwaggerInfo.Description = "This is a sample server Petstore server."
	docs.SwaggerInfo.Version = "2.0"

	var err error
	var stg storage.StorageInter
	stg, err = postgres.InitDB(psqlConfString)

	if err != nil {
		panic(err)
	}

	r := gin.Default()

	h := handlers.Handler{
		Stg: stg,
	}

	v1 := r.Group("/v2")
	{
		v1.POST("/article", h.CreateArticle)
		v1.GET("/article/:id", h.GetArticleById)
		v1.GET("/article", h.GetArticleList)
		v1.PUT("/article", h.UpdateArticle)
		v1.DELETE("/article/:id", h.DeleteArticle)

		v1.GET("/ping", h.Pong) //*testing example the localhost

		v1.POST("author", h.CreateAuthor)
		v1.GET("/author/:id", h.GetAuthorById)
		v1.GET("/author", h.GetAuthorList)
		v1.PUT("/author", h.UpdateAuthor)
		v1.DELETE("/author/:id", h.DeleteAuthor)
	}

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	r.Run(":8000")
}
