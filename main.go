package main

import (
	docs "UacademyGo/Article/docs" // docs is generated by Swag CLI, you have to import it.
	"UacademyGo/Article/handlers"
	"UacademyGo/Article/models"
	"UacademyGo/Article/storage/inmemory"

	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// * @contact.name   API Article
// * @contact.url    http://john.doe.com
// * @contact.email  john.doe@swagger.io
// * @license.name  Apache 2.0
// * @license.url   http://www.apache.org/licenses/LICENSE-2.0.html

func main() {
	// programmatically set swagger info
	docs.SwaggerInfo.Title = "Swagger Example API"
	docs.SwaggerInfo.Description = "This is a sample server Petstore server."
	docs.SwaggerInfo.Version = "2.0"

	inM := inmemory.InMemory{
		DB: &inmemory.DataB{},
	}

	err := inM.AddAuthor("52c9c9bd-2e68-401f-8ade-31dc7e7d6eea", models.CreateModelAuthor{
		Firstname: "John",
		Lastname: "Doe",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("8048264e-21a4-4ad5-b1d4-baf809210db6", models.CreateModelArticle{
		Content: models.Content{
			Title: "Lorem",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("6c5dc295-e3fc-4970-8841-7505630d796d", models.CreateModelArticle{
		Content: models.Content{
			Title: "1",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("d0c6557c-eaea-4e63-8c80-71caf73c7d89", models.CreateModelArticle{
		Content: models.Content{
			Title: "2",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("23ae0860-84a2-4b9e-b119-918ad85b9f03", models.CreateModelArticle{
		Content: models.Content{
			Title: "3",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("d8aed20c-aca3-4c1f-875f-ce823cd0495a", models.CreateModelArticle{
		Content: models.Content{
			Title: "4",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("3c4f62cf-b6ac-49f7-95bd-ce776ea58b34", models.CreateModelArticle{
		Content: models.Content{
			Title: "5",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("0828afee-86bf-4a58-8c85-b8f1a7fe304b", models.CreateModelArticle{
		Content: models.Content{
			Title: "6",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("44d50ef7-349c-49a0-a715-bd624f1fb397", models.CreateModelArticle{
		Content: models.Content{
			Title: "7",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("e914f3a6-8316-4e68-9241-8218e673bc14", models.CreateModelArticle{
		Content: models.Content{
			Title: "8",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("595a44d4-a382-489c-9bd8-c638dce27c45", models.CreateModelArticle{
		Content: models.Content{
			Title: "9",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("a525fcd5-7ab6-417d-89dd-90799b46d32e", models.CreateModelArticle{
		Content: models.Content{
			Title: "10",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}

	err = inM.AddNewArticle("653a1fc3-65f6-42e0-8b18-b044fba31c7f", models.CreateModelArticle{
		Content: models.Content{
			Title: "11",
			Body: "This is my Lorem pages",
		},
		AuthorID: "52c9c9bd-2e68-401f-8ade-31dc7e7d6eea",
	})
	if err != nil {
		panic(err)
	}


	r := gin.Default()

	h := handlers.Handler{
		IM: inM,
	}

	v1 := r.Group("/v2")
	{
		v1.POST("/article", h.CreateArticle)
		v1.GET("/article/:id", h.GetArticleById)
		v1.GET("/article", h.GetArticleList)
		v1.PUT("/article", h.UpdateArticle)
		v1.DELETE("/article/:id", h.DeleteArticle)

		v1.GET("/ping", h.Pong) //*testing example the localhost

		v1.POST("author", h.CreateAuthor)
		v1.GET("/author/:id", h.GetAuthorById)
		v1.GET("/author", h.GetAuthorList)
		v1.PUT("/author", h.UpdateAuthor)
		v1.DELETE("/author/:id", h.DeleteAuthor)
	}

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	r.Run(":8000")
}
